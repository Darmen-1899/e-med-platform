# Generated by Django 4.0.4 on 2022-04-21 16:16

import django.contrib.auth.models
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='medicine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=70)),
                ('email', models.EmailField(max_length=1024, verbose_name='Email')),
                ('description', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name': 'Application',
                'verbose_name_plural': 'Applications',
            },
        ),
        migrations.CreateModel(
            name='Medicines',
            fields=[
                ('id', models.CharField(help_text='ID', max_length=30, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the medicine', max_length=30, verbose_name='Name of the medicine')),
                ('name_ru', models.CharField(help_text='Name of the medicine', max_length=30, null=True, verbose_name='Name of the medicine')),
                ('name_en', models.CharField(help_text='Name of the medicine', max_length=30, null=True, verbose_name='Name of the medicine')),
                ('name_kk', models.CharField(help_text='Name of the medicine', max_length=30, null=True, verbose_name='Name of the medicine')),
                ('foi', models.CharField(help_text='Frequency of issue', max_length=30, verbose_name='Frequency of issue')),
                ('foi_ru', models.CharField(help_text='Frequency of issue', max_length=30, null=True, verbose_name='Frequency of issue')),
                ('foi_en', models.CharField(help_text='Frequency of issue', max_length=30, null=True, verbose_name='Frequency of issue')),
                ('foi_kk', models.CharField(help_text='Frequency of issue', max_length=30, null=True, verbose_name='Frequency of issue')),
                ('dg', models.CharField(help_text='ID', max_length=30, verbose_name='Diagnosis Group')),
                ('desc', models.CharField(max_length=100, verbose_name='Description of the medicine')),
                ('desc_ru', models.CharField(max_length=100, null=True, verbose_name='Description of the medicine')),
                ('desc_en', models.CharField(max_length=100, null=True, verbose_name='Description of the medicine')),
                ('desc_kk', models.CharField(max_length=100, null=True, verbose_name='Description of the medicine')),
            ],
            options={
                'verbose_name': 'Medicines',
                'verbose_name_plural': 'Medicines',
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(help_text='Username', max_length=150, unique=True, verbose_name='Username')),
                ('first_name', models.CharField(blank=True, max_length=1024, null=True, verbose_name='Name')),
                ('first_name_ru', models.CharField(blank=True, max_length=1024, null=True, verbose_name='Name')),
                ('first_name_en', models.CharField(blank=True, max_length=1024, null=True, verbose_name='Name')),
                ('first_name_kk', models.CharField(blank=True, max_length=1024, null=True, verbose_name='Name')),
                ('last_name', models.CharField(blank=True, max_length=1024, null=True, verbose_name='Surname')),
                ('last_name_ru', models.CharField(blank=True, max_length=1024, null=True, verbose_name='Surname')),
                ('last_name_en', models.CharField(blank=True, max_length=1024, null=True, verbose_name='Surname')),
                ('last_name_kk', models.CharField(blank=True, max_length=1024, null=True, verbose_name='Surname')),
                ('after_name', models.CharField(blank=True, max_length=1024, null=True, verbose_name='Middle name')),
                ('after_name_ru', models.CharField(blank=True, max_length=1024, null=True, verbose_name='Middle name')),
                ('after_name_en', models.CharField(blank=True, max_length=1024, null=True, verbose_name='Middle name')),
                ('after_name_kk', models.CharField(blank=True, max_length=1024, null=True, verbose_name='Middle name')),
                ('iin', models.CharField(blank=True, max_length=12, null=True, verbose_name='IIN')),
                ('email', models.EmailField(blank=True, max_length=1024, null=True, unique=True, verbose_name='Email')),
                ('roles', models.CharField(choices=[('P', 'Patient'), ('D', 'Doctor')], max_length=25)),
                ('roles_ru', models.CharField(choices=[('P', 'Patient'), ('D', 'Doctor')], max_length=25, null=True)),
                ('roles_en', models.CharField(choices=[('P', 'Patient'), ('D', 'Doctor')], max_length=25, null=True)),
                ('roles_kk', models.CharField(choices=[('P', 'Patient'), ('D', 'Doctor')], max_length=25, null=True)),
                ('med_id', models.CharField(blank=True, max_length=30, verbose_name='ID Medicines')),
                ('med_pac', models.CharField(max_length=25)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'ordering': ['last_name'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
